name: Build and test library
on:
  workflow_dispatch:
defaults:
  run:
    shell: pwsh
jobs:
  linux-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          6.0.x

    - name: Build core/lib
      shell: pwsh
      run: |
        ./build/build.ps1 -CoreOnly

    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: core-lib-linux
        path: artifacts/dbatools.library/core/lib/

  windows-tests:
    runs-on: windows-latest
    needs: linux-build

    steps:
    - uses: actions/checkout@v4

    - name: Download Linux artifacts
      uses: actions/download-artifact@v4
      with:
        name: core-lib-linux
        path: artifacts/dbatools.library/core/lib/

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          6.0.x

    - name: Install .NET Framework targeting packs
      shell: pwsh
      run: |
        # Install .NET Framework developer packs for building
        choco install netfx-4.7.2-devpack -y --no-progress

    - name: Build the library
      shell: pwsh
      run: |
        ./build/build.ps1

    - name: Copy Linux core/lib files
      shell: pwsh
      run: |
        Copy-Item -Path artifacts/core-lib-linux/* -Destination artifacts/dbatools.library/core/lib/ -Recurse -Force
        # delete windows sqlpackage on core cuz its the same as desktop
        Remove-Item -Path artifacts/dbatools.library/core/lib/dac/windows -Recurse -Force -ErrorAction Ignore

    - name: Verify critical files and directories
      shell: pwsh
      run: |
        Write-Host "Verifying critical files and directories before upload..." -ForegroundColor Cyan

        $artifactsDir = "./artifacts/dbatools.library"
        $criticalPaths = @(
          "desktop\lib",
          "desktop\lib\dac",
          "desktop\lib\runtimes\win-x64\native",
          "desktop\third-party",
          "core\lib",
          "core\lib\runtimes\win-x64\native",
          "core\lib\dac\linux",
          "core\lib\dac\mac",
          "core\third-party",
          "private"
        )

        $missingPaths = @()

        foreach ($path in $criticalPaths) {
          $fullPath = Join-Path $artifactsDir $path
          if (Test-Path $fullPath) {
            Write-Host "✅ Found: $path" -ForegroundColor Green
          } else {
            Write-Host "❌ Missing: $path" -ForegroundColor Red
            $missingPaths += $path
          }
        }

        if ($missingPaths.Count -gt 0) {
          Write-Host "Critical paths are missing! Build may be incomplete." -ForegroundColor Red
          Write-Host "Missing paths:"
          $missingPaths | ForEach-Object { Write-Host "  - $_" -ForegroundColor Red }

          # List what was actually built
          Write-Host "`nActual directory structure:" -ForegroundColor Yellow
          Get-ChildItem -Path $artifactsDir -Recurse -Directory |
            Select-Object -ExpandProperty FullName |
            ForEach-Object { $_.Replace("$artifactsDir\", "") } |
            Sort-Object |
            ForEach-Object { Write-Host "  $_" }

          exit 1
        } else {
          Write-Host "All critical paths verified successfully!" -ForegroundColor Green
        }

    - name: Test module import
      shell: pwsh
      run: |
        Import-Module ./artifacts/dbatools.library/dbatools.library.psd1 -Force
        $module = Get-Module dbatools.library
        Write-Host "Loaded dbatools.library version: $($module.Version)"
        Write-Host "Module path: $($module.Path)"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dbatools-library
        path: |
          artifacts/dbatools.library/
